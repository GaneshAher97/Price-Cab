{"version":3,"sources":["paperSelect.tsx"],"names":["PaperSelect","inputRef","label","arrayList","selectedArrayList","multiEnable","errorText","value","onSelection","selectAllEnable","selectAllText","containerStyle","dialogStyle","dialogTitle","dialogTitleStyle","searchStyle","disabled","checkboxColor","checkboxLabelStyle","checkboxUncheckedColor","errorStyle","textInputMode","underlineColor","activeUnderlineColor","activeOutlineColor","outlineColor","textInputBackgroundColor","textInputColor","textInputHeight","textInputStyle","dialogButtonLabelStyle","hideSearchBox","searchPlaceholder","modalCloseButtonText","modalDoneButtonText","theme","searchKey","setSearchKey","arrayHolder","setArrayHolder","list","setList","selectedList","setSelectedList","selfInputRef","selectInputRef","visible","setVisible","showDialog","_hideDialog","data","selectedData","finalText","forEach","val","index","el","_id","length","text","current","blur","_closeDialog","_onFocus","_onChecked","item","indexSelected","findIndex","splice","push","_onCheckedSingle","_exists","_temp","find","_isCheckedAll","_checkAll","slice","_renderListForMulti","map","key","flexDirection","alignItems","_renderListForSingle","_filterFunction","newData","filter","toLowerCase","includes","styles","container","backgroundColor","color","height","undefined","justifyContent","alignSelf","alignContent","position","top","bottom","left","right","borderRadius","paddingVertical","paddingHorizontal","margin","iconColor","borderColor","borderWidth","marginBottom","marginHorizontal","textColor","width","marginTop","StyleSheet","create"],"mappings":"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","sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/no-unused-vars */\r\n/* eslint-disable prettier/prettier */\r\n/* eslint-disable react-native/no-inline-styles */\r\nimport React, { memo, useRef, useState } from 'react';\r\nimport {\r\n  View,\r\n  StyleSheet,\r\n  Text,\r\n  TouchableOpacity,\r\n  ScrollView,\r\n} from 'react-native';\r\nimport {\r\n  TextInput,\r\n  Button,\r\n  Dialog,\r\n  Portal,\r\n  Searchbar,\r\n} from 'react-native-paper';\r\nimport CheckboxInput from '../components/checkBox';\r\nimport type { list, paperSelect } from '../interface/paperSelect.interface';\r\n\r\nconst PaperSelect = ({\r\n  inputRef,\r\n  label,\r\n  arrayList,\r\n  selectedArrayList,\r\n  multiEnable,\r\n  errorText,\r\n  value,\r\n  onSelection,\r\n  selectAllEnable = true,\r\n  selectAllText = \"Select All\",\r\n  containerStyle,\r\n  dialogStyle,\r\n  dialogTitle,\r\n  dialogTitleStyle,\r\n  searchStyle,\r\n  disabled = false,\r\n  checkboxColor,\r\n  checkboxLabelStyle,\r\n  checkboxUncheckedColor,\r\n  errorStyle,\r\n  textInputMode,\r\n  underlineColor,\r\n  activeUnderlineColor,\r\n  activeOutlineColor,\r\n  outlineColor,\r\n  textInputBackgroundColor,\r\n  textInputColor,\r\n  textInputHeight,\r\n  textInputStyle,\r\n  dialogButtonLabelStyle,\r\n  hideSearchBox,\r\n  searchPlaceholder,\r\n  modalCloseButtonText,\r\n  modalDoneButtonText,\r\n  theme\r\n}: paperSelect) => {\r\n  const [searchKey, setSearchKey] = useState<string>('');\r\n\r\n  const [arrayHolder, setArrayHolder] = useState<Array<list>>([...arrayList]);\r\n  const [list, setList] = useState<Array<list>>([...arrayList]);\r\n  const [selectedList, setSelectedList] = useState<Array<list>>([...selectedArrayList]);\r\n\r\n  const selfInputRef = useRef<any>(null);\r\n  const selectInputRef = inputRef ?? selfInputRef;\r\n\r\n  const [visible, setVisible] = useState<boolean>(false);\r\n\r\n  const showDialog = () => setVisible(true);\r\n\r\n  const _hideDialog = () => {\r\n    setSearchKey(\"\");\r\n    var data: Array<list> = [...arrayHolder];\r\n    // console.log(selectedList);\r\n    var selectedData: Array<list> = [...selectedList];\r\n    // console.log(selectedData);\r\n    let finalText: string = \"\";\r\n    selectedData.forEach((val, index) => {\r\n      data.forEach((el) => {\r\n        if (val._id === el._id) {\r\n          finalText += (index !== selectedData.length - 1) ? `${el.value}, ` : `${el.value}`;\r\n        }\r\n      });\r\n    });\r\n\r\n    onSelection({\r\n      text: finalText,\r\n      selectedList: selectedData,\r\n    });\r\n\r\n\r\n    setVisible(false);\r\n\r\n    if (selectInputRef && selectInputRef.current) {\r\n      selectInputRef.current.blur();\r\n    }\r\n  };\r\n\r\n  const _closeDialog = () => {\r\n    setVisible(false);\r\n    setSearchKey(\"\");\r\n    if (selectInputRef && selectInputRef.current) {\r\n      selectInputRef.current.blur();\r\n    }\r\n  };\r\n\r\n  const _onFocus = () => {\r\n    setArrayHolder([...arrayList]);\r\n    setList([...arrayList]);\r\n    setSelectedList([...selectedArrayList]);\r\n    showDialog();\r\n  };\r\n\r\n  const _onChecked = (item: any) => {\r\n    var selectedData = [...selectedList];\r\n    // const index = data.findIndex(x => x._id === item._id);\r\n    const indexSelected = selectedData.findIndex((val) => val._id === item._id);\r\n    if (indexSelected > -1) {\r\n      selectedData.splice(indexSelected, 1);\r\n    } else {\r\n      selectedData.push(item);\r\n    }\r\n    setSelectedList([...selectedData]);\r\n  };\r\n\r\n  const _onCheckedSingle = (item: any) => {\r\n    var selectedData = [...selectedList];\r\n    // const index = data.findIndex(x => x._id === item._id);\r\n    const indexSelected = selectedData.findIndex((val) => val._id === item._id);\r\n    if (indexSelected > -1) {\r\n      // selectedData.splice(indexSelected, 1);\r\n      selectedData = [];\r\n    } else {\r\n      selectedData = [];\r\n      selectedData.push(item);\r\n    }\r\n    // console.log(selectedData);\r\n    setSelectedList([...selectedData]);\r\n  };\r\n\r\n  const _exists = (item: any) => {\r\n    // console.log(selectedList);\r\n    let _temp = [...selectedList]\r\n    return _temp.find((val: any) => val._id === item._id) ? true : false;\r\n  };\r\n\r\n  const _isCheckedAll = () => {\r\n    const data = [...list];\r\n    const selectedData = [...selectedList];\r\n    return selectedData.length !== 0 && selectedData.length === data.length;\r\n  };\r\n\r\n  const _checkAll = () => {\r\n    const data = [...list];\r\n    var selectedData = [...selectedList];\r\n    if (selectedData.length === data.length) {\r\n      selectedData = [];\r\n    } else if (selectedData.length === 0 || selectedData.length > 0) {\r\n      selectedData = data.slice(0);\r\n    }\r\n\r\n    setSelectedList([...selectedData]);\r\n  };\r\n\r\n  const _renderListForMulti = () => {\r\n    return list.map((item, key) => {\r\n      return (\r\n        <TouchableOpacity\r\n          style={{ flexDirection: 'row', alignItems: 'center' }}\r\n          key={key}\r\n          onPress={() => {\r\n            _onChecked(item);\r\n          }}\r\n        >\r\n          <CheckboxInput\r\n            isChecked={_exists(item)}\r\n            label={item.value}\r\n            checkboxLabelStyle={checkboxLabelStyle}\r\n            checkboxColor={checkboxColor}\r\n            checkboxUncheckedColor={checkboxUncheckedColor}\r\n          />\r\n        </TouchableOpacity>\r\n      );\r\n    });\r\n  };\r\n\r\n  const _renderListForSingle = () => {\r\n    return list.map((item, key) => {\r\n      return (\r\n        <TouchableOpacity\r\n          style={{ flexDirection: 'row', alignItems: 'center' }}\r\n          key={key}\r\n          onPress={() => {\r\n            _onCheckedSingle(item);\r\n          }}\r\n        >\r\n          <CheckboxInput\r\n            isChecked={_exists(item)}\r\n            label={item.value}\r\n            checkboxLabelStyle={checkboxLabelStyle}\r\n            checkboxColor={checkboxColor}\r\n            checkboxUncheckedColor={checkboxUncheckedColor}\r\n          />\r\n        </TouchableOpacity>\r\n      );\r\n    });\r\n  };\r\n\r\n  const _filterFunction = (text: string) => {\r\n    setSearchKey(text);\r\n    const newData = arrayHolder.filter((item) =>\r\n      item.value.toLowerCase().includes(text.toLowerCase())\r\n    );\r\n    setList(newData);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <View style={[styles.container, containerStyle]}>\r\n        <TextInput\r\n          ref={selectInputRef}\r\n          disabled={disabled}\r\n          style={{\r\n            ...textInputStyle,\r\n            backgroundColor: textInputBackgroundColor || '#fff',\r\n            color: textInputColor || '#000',\r\n            height: textInputHeight,\r\n          }}\r\n          label={label}\r\n          underlineColor={underlineColor || 'black'}\r\n          activeUnderlineColor={activeUnderlineColor || 'black'}\r\n          activeOutlineColor={activeOutlineColor || 'black'}\r\n          outlineColor={outlineColor || 'black'}\r\n          mode={textInputMode || 'outlined'}\r\n          onFocus={disabled ? undefined : _onFocus}\r\n          showSoftInputOnFocus={false}\r\n          value={value}\r\n          right={\r\n            <TextInput.Icon\r\n              style={{\r\n                justifyContent: 'center',\r\n                alignItems: 'center',\r\n                alignSelf: 'center',\r\n                alignContent: 'center',\r\n                position: 'absolute',\r\n                top: 0,\r\n                bottom: 0,\r\n                left: 0,\r\n                right: 0,\r\n              }}\r\n              size={15}\r\n              name=\"chevron-down\"\r\n            />\r\n          }\r\n          theme={theme}\r\n        />\r\n        {errorText ? (\r\n          <Text style={{ ...errorStyle, color: errorStyle?.color || 'red' }}>\r\n            {errorText}\r\n          </Text>\r\n        ) : null}\r\n      </View>\r\n\r\n      <View>\r\n        <Portal>\r\n          <Dialog\r\n            style={{\r\n              backgroundColor: dialogStyle?.backgroundColor || 'white',\r\n              borderRadius: dialogStyle?.borderRadius || 5,\r\n            }}\r\n            visible={visible}\r\n            dismissable={false}\r\n          >\r\n            <Dialog.Title style={dialogTitleStyle}>{dialogTitle ?? label}</Dialog.Title>\r\n            <Dialog.Content>\r\n              <Dialog.ScrollArea\r\n                style={{\r\n                  height: 300,\r\n                  paddingVertical: 10,\r\n                  paddingHorizontal: 0,\r\n                }}\r\n              >\r\n                {hideSearchBox ? <Text style={{ margin: 0, height: 0 }} /> : <Searchbar\r\n                  value={searchKey}\r\n                  placeholder={searchPlaceholder || \"Search\"}\r\n                  onChangeText={(text: string) => _filterFunction(text)}\r\n                  iconColor={searchStyle?.iconColor || 'black'}\r\n                  style={{\r\n                    borderRadius: searchStyle?.borderRadius || 5,\r\n                    borderColor: searchStyle?.borderColor || '#e5e5e5',\r\n                    backgroundColor: searchStyle?.backgroundColor || '#e5e5e5',\r\n                    borderWidth: 0.5,\r\n                    marginBottom: 10,\r\n                    marginHorizontal: 8,\r\n                    color: searchStyle?.textColor || '#000',\r\n                  }}\r\n                />}\r\n                {(multiEnable === true && selectAllEnable === true) && (\r\n                  <TouchableOpacity\r\n                    style={{ flexDirection: 'row', alignItems: 'center' }}\r\n                    onPress={() => {\r\n                      _checkAll();\r\n                    }}\r\n                  >\r\n                    <CheckboxInput\r\n                      isChecked={_isCheckedAll()}\r\n                      label={selectAllText}\r\n                      checkboxLabelStyle={checkboxLabelStyle}\r\n                      checkboxColor={checkboxColor}\r\n                      checkboxUncheckedColor={checkboxUncheckedColor}\r\n                    />\r\n                  </TouchableOpacity>\r\n                )}\r\n                <ScrollView\r\n                  style={{ width: '100%' }}\r\n                  persistentScrollbar={true}\r\n                  showsVerticalScrollIndicator={true}\r\n                  keyboardShouldPersistTaps=\"handled\"\r\n                >\r\n                  {multiEnable === true\r\n                    ? _renderListForMulti()\r\n                    : _renderListForSingle()}\r\n                </ScrollView>\r\n              </Dialog.ScrollArea>\r\n            </Dialog.Content>\r\n            <Dialog.Actions style={{ marginTop: -20 }}>\r\n              <Button labelStyle={dialogButtonLabelStyle} onPress={_closeDialog}>\r\n                {modalCloseButtonText || \"Close\"}\r\n              </Button>\r\n              <Button labelStyle={dialogButtonLabelStyle} onPress={_hideDialog}>\r\n                {modalDoneButtonText || \"Done\"}\r\n              </Button>\r\n            </Dialog.Actions>\r\n          </Dialog>\r\n        </Portal>\r\n      </View>\r\n    </>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    width: '100%',\r\n    marginBottom: 10,\r\n  },\r\n});\r\n\r\nexport default memo(PaperSelect);\r\n"]}